@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap");

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Poppins", sans-serif;
}

body {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #83bdff;
}

.calendar {
    width: 500px;
    height: auto;
    display: flex;
    flex-direction: column;
    padding: 10px;
    background: #fff;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0,0,0,0.3);
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding:10px;
}

.monthYear{
    text-align: center;
    font-weight: 600;
    width: 150px;
}

.header button {
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    border-radius: 50%;
    background: #fff;
    cursor: pointer;
    width: 40px;
    height: 40px;
    box-shadow: 0 0 4px rgba(0,0,0,0.2);
    transition: background 0.3s;
}

.header button:hover {
    background: #ff5869;
    color: white;
}

.days {
    display: grid;
    grid-template-columns: repeat(7,1fr);
}

.day {
    text-align: center;
    padding: 5px;
    color: #999FA6;
    font-weight: 500;
}

.dates{
    display: grid;
    grid-template-columns: repeat(7, 1fr) ;
    gap: 5px;
}

.date{
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 10px;
    margin: auto;
    cursor: pointer;
    font-weight: 600;
    border-radius: 50%;
    width:40px;
    height: 40px;
    transition: 0.2s;
}

.date:hover,
.date.active {
    background: #FFC5D3;
    color: #fff;
}

.date.inactive {
    color: #d2d2d2;
}

.date.inactive.hover {
    color: #fff;
}

/* Modal Styling */
.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10;
}

.modal-content {
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    width: 90%;
    max-width: 400px;
    box-shadow: 0 0 10px rgba(0,0,0,0.3);
}

.modal-content h2 {
    margin-bottom: 10px;
    text-align: center;
    color: #ff5869;
}

.modal-content input,
.modal-content textarea {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-family: "Poppins", sans-serif;
}

.modal-content button {
    background-color: #ff5869;
    color: white;
    padding: 10px;
    width: 100%;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background 0.3s;
}

.modal-content button:hover {
    background-color: #e0485c;
}

.close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 20px;
    cursor: pointer;
    color: #ff5869;
    transition: color 0.3s;
}

.close:hover {
    color: #e0485c;
}

Let's enhance your calendar so that events are stored and displayed when you click on a date. We'll do this by:

1. Storing events in localStorage so they persist even after a page refresh.


2. Displaying events when you click on a date.


3. Allowing users to add, view, and delete events.




---

JavaScript (main.js) Update

let selectedDate = null;
let events = JSON.parse(localStorage.getItem('events')) || {}; // Load events from localStorage

// Function to update the calendar UI
const updateCalendar = () => {
    const currentYear = currentDate.getFullYear();
    const currentMonth = currentDate.getMonth();

    const firstDay = new Date(currentYear, currentMonth, 1);
    const lastDay = new Date(currentYear, currentMonth + 1, 0);
    const totalDays = lastDay.getDate();
    const firstDayIndex = firstDay.getDay();
    const lastDayIndex = lastDay.getDay();

    const monthYearString = currentDate.toLocaleString('default', {month :'long', year:'numeric'});
    monthYearElement.textContent = monthYearString;

    let datesHTML = '';

    for (let i = 0; i < firstDayIndex; i++) {
        datesHTML += `<div class="date inactive"></div>`;
    }

    for (let i = 1; i <= totalDays; i++) {
        const date = new Date(currentYear, currentMonth, i);
        const formattedDate = date.toISOString().split('T')[0];
        const activeClass = date.toDateString() === new Date().toDateString() ? 'active' : '';
        const hasEvent = events[formattedDate] ? 'has-event' : '';

        datesHTML += `<div class="date ${activeClass} ${hasEvent}" data-date="${formattedDate}">${i}</div>`;
    }

    for (let i = lastDayIndex; i < 6; i++) {
        datesHTML += `<div class="date inactive"></div>`;
    }

    dateElement.innerHTML = datesHTML;
}

const saveEvents = () => {
    localStorage.setItem('events', JSON.stringify(events));
};

document.addEventListener('click', (e) => {
    if (e.target.classList.contains('date') && !e.target.classList.contains('inactive')) {
        const previouslySelected = document.querySelector('.date.selected');
        if (previouslySelected) previouslySelected.classList.remove('selected');

        e.target.classList.add('selected');
        selectedDate = e.target.getAttribute('data-date');

        const eventModal = document.getElementById('eventModal');
        const selectedDateElement = document.getElementById('selectedDate');
        
        if (eventModal && selectedDateElement) {
            selectedDateElement.textContent = `Selected Date: ${selectedDate}`;
            document.getElementById('eventTitle').value = events[selectedDate]?.title || '';
            document.getElementById('eventTime').value = events[selectedDate]?.time || '';
            document.getElementById('eventDescription').value = events[selectedDate]?.description || '';
            eventModal.style.display = 'block';
        }
    }
});

document.getElementById('saveEvent').addEventListener('click', () => {
    const title = document.getElementById('eventTitle').value;
    const time = document.getElementById('eventTime').value;
    const description = document.getElementById('eventDescription').value;

    if (title && time) {
        events[selectedDate] = { title, time, description };
        saveEvents();
        updateCalendar();

        document.getElementById('eventModal').style.display = 'none';
    } else {
        alert('Please enter both title and time for the event.');
    }
});

document.getElementById('closeModal').addEventListener('click', () => {
    document.getElementById('eventModal').style.display = 'none';
});

prevBtn.addEventListener('click', () => {
    currentDate.setMonth(currentDate.getMonth() - 1);
    updateCalendar();
});

nextBtn.addEventListener('click', () => {
    currentDate.setMonth(currentDate.getMonth() + 1);
    updateCalendar();
});

.has-event {
    background-color: #ffeb3b;
    border: 2px solid #ffa726;
}

.has-event:hover {
    background-color: #ffd54f;
}
.date.has-event {
    background-color: #ffeb3b; /* Yellow background to indicate event */
    border: 2px solid #ffa726;
    color: black;
}

.date.has-event:hover {
    background-color: #ffd54f;
}

/* Event modal styles */
#eventModal {
    position: fixed;
    top: 20%;
    left: 50%;
    transform: translate(-50%, 0);
    background: white;
    border: 1px solid #ccc;
    padding: 20px;
    z-index: 10;
    border-radius: 10px;
}

.event-item {
    margin-bottom: 10px;
}

.event-item button {
    margin-left: 10px;
    background-color: red;
    color: white;
    border: none;
    cursor: pointer;
    padding: 2px 6px;
}

/* Overlay */
#overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: none;
    z-index: 9;
}

/* Event Modal */
#eventModal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    border-radius: 12px;
    padding: 20px;
    z-index: 10;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    width: 350px;
    transition: all 0.3s;
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
}

.modal-header button {
    background: none;
    border: none;
    font-size: 18px;
    cursor: pointer;
}

.modal-body input, .modal-body textarea {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ddd;
    border-radius: 6px;
}

#saveEvent {
    background-color: #4CAF50;
    color: white;
    border: none;
    padding: 10px;
    border-radius: 6px;
    cursor: pointer;
    width: 100%;
}

#eventList {
    max-height: 200px;
    overflow-y: auto;
    margin-top: 10px;
    border-top: 1px solid #ddd;
    padding-top: 10px;
}

.event-item {
    padding: 6px;
    margin-bottom: 6px;
    border-radius: 6px;
    background-color: #f0f0f0;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.event-item button {
    background-color: #e74c3c;
    color: white;
    border: none;
    padding: 4px 8px;
    border-radius: 4px;
    cursor: pointer;
}

.date.has-event {
    background-color: #ffeb3b;
    border: 2px solid #ffa726;
    color: black;
}

updateCalendar();